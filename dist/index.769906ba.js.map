{"mappings":"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","sources":["src/user.js"],"sourcesContent":["function anmelden() {\r\n  var username = document.getElementById(\"username\").value;\r\n  console.log(username);\r\n  var password = document.getElementById(\"password\").value;\r\n  console.log(password);\r\n\r\n  $.ajax({\r\n    url: \"http://localhost:3000/users/login\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: \"POST\",\r\n    data: JSON.stringify({\r\n      username: username,\r\n      password: password,\r\n    }),\r\n    success: function (data) {\r\n      const user = data;\r\n      console.log(user.username);\r\n\r\n      // Do something to indicate that the user is logged in\r\n      const listDiv = document.getElementById(\"listDiv\");\r\n      listDiv.classList.toggle(\"d-none\", false);\r\n\r\n      const loginDiv = document.getElementById(\"loginDiv\");\r\n      loginDiv.classList.toggle(\"d-none\", true);\r\n\r\n      document.getElementById(\"userLoginDisplayName\").value = user.username;\r\n\r\n      if (user.role === \"user\") {\r\n        console.log(\"LOAD USER TABLE\");\r\n        loadTableUser(user.username);\r\n      } else {\r\n        console.log(\"LOAD ADMIN TABLE\");\r\n        loadTableArztAdmin();\r\n      }\r\n      clearValues();\r\n    },\r\n    error: function () {\r\n      alert(\"Invalid username or password.\");\r\n      console.log(\"Failed to log in.\");\r\n    },\r\n  });\r\n}\r\n\r\nfunction abmelden() {\r\n  console.log(\"abmelden\");\r\n  const listDiv = document.getElementById(\"listDiv\");\r\n  listDiv.classList.toggle(\"d-none\", true);\r\n\r\n  const loginDiv = document.getElementById(\"loginDiv\");\r\n  loginDiv.classList.toggle(\"d-none\", false);\r\n\r\n  const adminPanel = document.getElementById(\"adminPanel\");\r\n  adminPanel.classList.toggle(\"d-none\", true);\r\n}\r\n\r\nfunction addUser() {\r\n  var username = document.getElementById(\"new-username\").value;\r\n  const roleSelector = document.getElementById(\"roleSelector\");\r\n  const selectedOption = roleSelector.options[roleSelector.selectedIndex];\r\n  const selectedRole = selectedOption.textContent;\r\n\r\n  console.log(selectedRole);\r\n  var password = document.getElementById(\"confirm-password\").value;\r\n\r\n  $.ajax({\r\n    url: \"http://localhost:3000/users\",\r\n    method: \"POST\",\r\n    contentType: \"application/json\",\r\n    data: JSON.stringify({\r\n      username: username,\r\n      role: selectedRole,\r\n      password: password,\r\n    }),\r\n    success: function (data) {\r\n      console.log(\"User created successfully:\", data);\r\n      alertSuccess();\r\n      clearValues();\r\n    },\r\n    error: function (jqXHR) {\r\n      console.log(jqXHR);\r\n      if (\r\n        jqXHR.status === 400 &&\r\n        jqXHR.responseJSON &&\r\n        jqXHR.responseJSON.error === \"Username already exists\"\r\n      ) {\r\n        console.log(\"Username already exists\");\r\n        alertExists();\r\n      } else {\r\n        console.log(\"Failed to create user.\");\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction alertExists() {\r\n  const alertPlaceholder = document.getElementById(\"usernameExists\");\r\n\r\n  const alert = (message, type) => {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.innerHTML = [\r\n      `<div class=\"alert alert-${type} alert-dismissible\" role=\"alert\">`,\r\n      `   <div>${message}</div>`,\r\n      '   <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>',\r\n      \"</div>\",\r\n    ].join(\"\");\r\n\r\n    alertPlaceholder.append(wrapper);\r\n  };\r\n\r\n  alert(\"Benutzername existiert bereits!\", \"danger\");\r\n}\r\n\r\nfunction alertSuccess() {\r\n  const alertPlaceholder = document.getElementById(\"usernameCreated\");\r\n\r\n  const alert = (message, type) => {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.innerHTML = [\r\n      `<div class=\"alert alert-${type} alert-dismissible\" role=\"alert\">`,\r\n      `   <div>${message}</div>`,\r\n      '   <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>',\r\n      \"</div>\",\r\n    ].join(\"\");\r\n\r\n    alertPlaceholder.append(wrapper);\r\n  };\r\n\r\n  alert(\"Benutzer wurde erfolgreich angelegt!\", \"success\");\r\n}\r\n\r\nfunction checkAdmin() {\r\n  var username = document.getElementById(\"userLoginDisplayName\").value;\r\n  $.ajax({\r\n    url: \"http://localhost:3000/users/\" + username,\r\n    method: \"GET\",\r\n    success: function (data) {\r\n      if (data.username === username) {\r\n        // The user was found and has the correct username\r\n        if (data.role === \"admin\") {\r\n          // The user is an admin\r\n          const adminPanel = document.getElementById(\"adminPanel\");\r\n          adminPanel.classList.toggle(\"d-none\", false);\r\n          clearValues();\r\n        }\r\n      }\r\n    },\r\n    error: function () {\r\n      console.log(\"Failed to retrieve entries from API.\");\r\n    },\r\n  });\r\n}\r\n"],"names":[],"version":3,"file":"index.769906ba.js.map","sourceRoot":"/__parcel_source_root/"}